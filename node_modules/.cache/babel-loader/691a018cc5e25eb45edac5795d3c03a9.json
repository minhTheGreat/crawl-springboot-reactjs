{"ast":null,"code":"import _classCallCheck from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\NoteJS\\\\final\\\\src\\\\views\\\\elements\\\\DropzoneImg.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nimport { Progress } from 'react-sweet-progress';\nimport \"react-sweet-progress/lib/style.css\";\nvar CLOUDINARY_UPLOAD_PRESET = 'mockfinal19';\nvar CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/dv7rbbhuf/upload';\n\nvar DropzoneImg =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropzoneImg, _Component);\n\n  function DropzoneImg(props) {\n    var _this;\n\n    _classCallCheck(this, DropzoneImg);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropzoneImg).call(this, props));\n\n    _this.handleImageUpload = function (file) {\n      if (file.size < 3145728) {\n        _this.setState({\n          alert: false\n        });\n\n        var upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file).on('progress', function (data) {\n          var progress = Math.round(data.loaded * 100.0 / data.total);\n\n          _this.setState({\n            progress: progress\n          });\n        });\n        upload.end(function (err, response) {\n          if (err) {\n            console.error(err);\n          }\n\n          if (response.body.secure_url !== '') {\n            _this.setState({\n              uploadedFileCloudinaryUrl: response.body.secure_url\n            });\n\n            _this.props.onHandleAvatar(response.body.secure_url);\n          }\n        });\n      } else {\n        _this.setState({\n          alert: true\n        });\n      }\n    };\n\n    _this.state = {\n      uploadedFileCloudinaryUrl: '',\n      progress: 0,\n      alert: false\n    };\n    return _this;\n  }\n\n  _createClass(DropzoneImg, [{\n    key: \"onImageDrop\",\n    value: function onImageDrop(files) {\n      this.setState({\n        uploadedFile: files[0]\n      });\n      this.handleImageUpload(files[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FileUpload\",\n        style: {\n          height: '4em',\n          background: '#ccc',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        multiple: false,\n        accept: \"image/*\",\n        onDrop: this.onImageDrop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \" K\\xE9o \\u1EA3nh ho\\u1EB7c click \\u0111\\u1EC3 ch\\u1ECDn \\u1EA3nh \"));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.state.alert ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"\\u1EA2nh kh\\xF4ng \\u0111\\u01B0\\u1EE3c tr\\xEAn 3MB \") : null, this.state.uploadedFileCloudinaryUrl === '' ? this.props.id ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.props.txtAvatar,\n        style: {\n          width: '30em',\n          height: '30em',\n          borderRadius: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })) : null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.uploadedFile.name), React.createElement(\"img\", {\n        style: {\n          height: '50%',\n          width: '50%'\n        },\n        src: this.state.uploadedFileCloudinaryUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(Progress, {\n        percent: this.state.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DropzoneImg;\n}(Component);\n\nexport { DropzoneImg as default };","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\views\\elements\\DropzoneImg.js"],"names":["React","Component","Dropzone","request","Progress","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","DropzoneImg","props","handleImageUpload","file","size","setState","alert","upload","post","field","on","data","progress","Math","round","loaded","total","end","err","response","console","error","body","secure_url","uploadedFileCloudinaryUrl","onHandleAvatar","state","files","uploadedFile","height","background","textAlign","onImageDrop","bind","getRootProps","getInputProps","id","txtAvatar","width","borderRadius","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAO,oCAAP;AAEA,IAAMC,wBAAwB,GAAG,aAAjC;AACA,IAAMC,qBAAqB,GAAG,kDAA9B;;IAGqBC,W;;;;;AACjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAmBnBC,iBAnBmB,GAmBC,UAACC,IAAD,EAAU;AAC1B,UAAIA,IAAI,CAACC,IAAL,GAAY,OAAhB,EAAyB;AACrB,cAAKC,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;;AACA,YAAIC,MAAM,GAAGX,OAAO,CAACY,IAAR,CAAaT,qBAAb,EACRU,KADQ,CACF,eADE,EACeX,wBADf,EAERW,KAFQ,CAEF,MAFE,EAEMN,IAFN,EAEYO,EAFZ,CAEe,UAFf,EAGL,UAACC,IAAD,EAAU;AACN,cAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAaH,IAAI,CAACI,MAAL,GAAc,KAAf,GAAwBJ,IAAI,CAACK,KAAzC,CAAjB;;AACA,gBAAKX,QAAL,CAAc;AAAEO,YAAAA,QAAQ,EAARA;AAAF,WAAd;AAEH,SAPI,CAAb;AAYAL,QAAAA,MAAM,CAACU,GAAP,CAAW,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC1B,cAAID,GAAJ,EAAS;AACLE,YAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACH;;AACD,cAAIC,QAAQ,CAACG,IAAT,CAAcC,UAAd,KAA6B,EAAjC,EAAqC;AACjC,kBAAKlB,QAAL,CAAc;AACVmB,cAAAA,yBAAyB,EAAEL,QAAQ,CAACG,IAAT,CAAcC;AAD/B,aAAd;;AAGA,kBAAKtB,KAAL,CAAWwB,cAAX,CAA0BN,QAAQ,CAACG,IAAT,CAAcC,UAAxC;AACH;AACJ,SAVD;AAYH,OA1BD,MA0BO;AACH,cAAKlB,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH;AAEJ,KAlDkB;;AAGf,UAAKoB,KAAL,GAAa;AACTF,MAAAA,yBAAyB,EAAE,EADlB;AAETZ,MAAAA,QAAQ,EAAE,CAFD;AAGTN,MAAAA,KAAK,EAAE;AAHE,KAAb;AAHe;AAQlB;;;;gCAEWqB,K,EAAO;AAEf,WAAKtB,QAAL,CAAc;AACVuB,QAAAA,YAAY,EAAED,KAAK,CAAC,CAAD;AADT,OAAd;AAGA,WAAKzB,iBAAL,CAAuByB,KAAK,CAAC,CAAD,CAA5B;AAGH;;;6BAiCQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAC/BE,UAAAA,MAAM,EAAE,KADuB;AAE/BC,UAAAA,UAAU,EAAE,MAFmB;AAEXC,UAAAA,SAAS,EAAE;AAFA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAE,KADd;AAEI,QAAA,MAAM,EAAC,SAFX;AAGI,QAAA,MAAM,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,gBAAqC;AAAA,YAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;AAClC,eACI,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAJR,CADJ;AASH,OAdL,CAJJ,CADJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKT,KAAL,CAAWpB,KAAX,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAAnB,GAA2D,IADhE,EAEK,KAAKoB,KAAL,CAAWF,yBAAX,KAAyC,EAAzC,GACK,KAAKvB,KAAL,CAAWmC,EAAX,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAK,QAAA,GAAG,EAAE,KAAKnC,KAAL,CAAWoC,SAArB;AACvB,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,MAAT;AAAiBT,UAAAA,MAAM,EAAE,MAAzB;AAAiCU,UAAAA,YAAY,EAAE;AAA/C,SADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAAhB,GAC0E,IAF/E,GAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKb,KAAL,CAAWE,YAAX,CAAwBY,IAA5B,CADJ,EAEI;AAAK,QAAA,KAAK,EAAE;AAAEX,UAAAA,MAAM,EAAE,KAAV;AAAiBS,UAAAA,KAAK,EAAE;AAAxB,SAAZ;AAA6C,QAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWF,yBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANR,EAeI,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWd,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CAvBJ,CADJ;AA2CH;;;;EAjGoClB,S;;SAApBM,W","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport request from 'superagent';\r\nimport { Progress } from 'react-sweet-progress';\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\nconst CLOUDINARY_UPLOAD_PRESET = 'mockfinal19'\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/dv7rbbhuf/upload'\r\n\r\n\r\nexport default class DropzoneImg extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            uploadedFileCloudinaryUrl: '',\r\n            progress: 0,\r\n            alert: false\r\n        };\r\n    }\r\n\r\n    onImageDrop(files) {\r\n\r\n        this.setState({\r\n            uploadedFile: files[0]\r\n        })\r\n        this.handleImageUpload(files[0])\r\n\r\n\r\n    }\r\n    handleImageUpload = (file) => {\r\n        if (file.size < 3145728) {\r\n            this.setState({ alert: false })\r\n            let upload = request.post(CLOUDINARY_UPLOAD_URL)\r\n                .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n                .field('file', file).on('progress',\r\n                    (data) => {\r\n                        const progress = Math.round(((data.loaded * 100.0) / data.total))\r\n                        this.setState({ progress })\r\n\r\n                    }\r\n\r\n                );\r\n\r\n\r\n            upload.end((err, response) => {\r\n                if (err) {\r\n                    console.error(err);\r\n                }\r\n                if (response.body.secure_url !== '') {\r\n                    this.setState({\r\n                        uploadedFileCloudinaryUrl: response.body.secure_url\r\n                    })\r\n                    this.props.onHandleAvatar(response.body.secure_url)\r\n                }\r\n            })\r\n\r\n        } else {\r\n            this.setState({ alert: true })\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"FileUpload\" style={{\r\n                    height: '4em',\r\n                    background: '#ccc', textAlign: 'center'\r\n                }}>\r\n                    <Dropzone\r\n                        multiple={false}\r\n                        accept=\"image/*\"\r\n                        onDrop={this.onImageDrop.bind(this)}>\r\n                        {({ getRootProps, getInputProps }) => {\r\n                            return (\r\n                                <div {...getRootProps()} >\r\n\r\n                                    <input {...getInputProps()} />\r\n                                    {\r\n                                        <p > Kéo ảnh hoặc click để chọn ảnh </p>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }}\r\n\r\n                    </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {this.state.alert ? <span>Ảnh không được trên 3MB </span> : null}\r\n                    {this.state.uploadedFileCloudinaryUrl === '' ?\r\n                        ( this.props.id ? <span><img src={this.props.txtAvatar} \r\n                         style={{ width: '30em', height: '30em', borderRadius: '50%' }} /></span> : null )\r\n                        :\r\n                        <div>\r\n                            <p>{this.state.uploadedFile.name}</p>\r\n                            <img style={{ height: '50%', width: '50%' }} src={this.state.uploadedFileCloudinaryUrl} />\r\n\r\n\r\n                        </div>\r\n\r\n\r\n                    }\r\n                    <Progress percent={this.state.progress} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}