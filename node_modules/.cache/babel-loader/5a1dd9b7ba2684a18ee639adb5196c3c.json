{"ast":null,"code":"import _classCallCheck from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\NoteJS\\\\final\\\\src\\\\views\\\\elements\\\\DropzoneImg.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nvar CLOUDINARY_UPLOAD_PRESET = 'mockfinal19';\nvar CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/dv7rbbhuf/upload';\n\nvar DropzoneImg =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropzoneImg, _Component);\n\n  function DropzoneImg(props) {\n    var _this;\n\n    _classCallCheck(this, DropzoneImg);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropzoneImg).call(this, props));\n\n    _this.handleImageUpload = function (file, progess) {\n      var upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file).field('fileuploadprogress', progess);\n      upload.end(function (err, response) {\n        if (err) {\n          console.error(err);\n        }\n\n        if (response.body.secure_url !== '') {\n          _this.setState({\n            uploadedFileCloudinaryUrl: response.body.secure_url\n          });\n\n          _this.props.onHandleAvatar(response.body.secure_url);\n        }\n      });\n      console.log(file.load);\n    };\n\n    _this.state = {\n      uploadedFileCloudinaryUrl: '',\n      progess: 0\n    };\n    return _this;\n  }\n\n  _createClass(DropzoneImg, [{\n    key: \"onImageDrop\",\n    value: function onImageDrop(files) {\n      this.setState({\n        uploadedFile: files[0]\n      });\n      this.handleImageUpload(files[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FileUpload\",\n        style: {\n          height: '4em',\n          background: '#ccc',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        multiple: false,\n        accept: \"image/*\",\n        onDrop: this.onImageDrop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \" K\\xE9o \\u1EA3nh ho\\u1EB7c click \\u0111\\u1EC3 ch\\u1ECDn \\u1EA3nh \"));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.uploadedFileCloudinaryUrl === '' ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.uploadedFile.name), React.createElement(\"img\", {\n        src: this.state.uploadedFileCloudinaryUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DropzoneImg;\n}(Component);\n\nexport { DropzoneImg as default };","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\views\\elements\\DropzoneImg.js"],"names":["React","Component","Dropzone","request","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","DropzoneImg","props","handleImageUpload","file","progess","upload","post","field","end","err","response","console","error","body","secure_url","setState","uploadedFileCloudinaryUrl","onHandleAvatar","log","load","state","files","uploadedFile","height","background","textAlign","onImageDrop","bind","getRootProps","getInputProps","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,wBAAwB,GAAG,aAAjC;AACA,IAAMC,qBAAqB,GAAG,kDAA9B;;IAGqBC,W;;;;;AACjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAgBnBC,iBAhBmB,GAgBD,UAACC,IAAD,EAAMC,OAAN,EAAiB;AAE/B,UAAIC,MAAM,GAAGR,OAAO,CAACS,IAAR,CAAaP,qBAAb,EACRQ,KADQ,CACF,eADE,EACeT,wBADf,EAERS,KAFQ,CAEF,MAFE,EAEKJ,IAFL,EAEWI,KAFX,CAEiB,oBAFjB,EAEsCH,OAFtC,CAAb;AAGAC,MAAAA,MAAM,CAACG,GAAP,CAAW,UAACC,GAAD,EAAKC,QAAL,EAAgB;AACvB,YAAGD,GAAH,EAAO;AACHE,UAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACH;;AACD,YAAGC,QAAQ,CAACG,IAAT,CAAcC,UAAd,KAA6B,EAAhC,EAAmC;AAC/B,gBAAKC,QAAL,CAAc;AACVC,YAAAA,yBAAyB,EAAEN,QAAQ,CAACG,IAAT,CAAcC;AAD/B,WAAd;;AAGA,gBAAKb,KAAL,CAAWgB,cAAX,CAA0BP,QAAQ,CAACG,IAAT,CAAcC,UAAxC;AAEH;AACJ,OAXD;AAYAH,MAAAA,OAAO,CAACO,GAAR,CAAYf,IAAI,CAACgB,IAAjB;AAEH,KAnCkB;;AAGf,UAAKC,KAAL,GAAa;AACTJ,MAAAA,yBAAyB,EAAE,EADlB;AAETZ,MAAAA,OAAO,EAAC;AAFC,KAAb;AAHe;AAOlB;;;;gCAEWiB,K,EAAO;AACf,WAAKN,QAAL,CAAc;AACVO,QAAAA,YAAY,EAAED,KAAK,CAAC,CAAD;AADT,OAAd;AAGA,WAAKnB,iBAAL,CAAuBmB,KAAK,CAAC,CAAD,CAA5B;AAEH;;;6BAqBQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAC,KAAT;AACnCC,UAAAA,UAAU,EAAE,MADuB;AACfC,UAAAA,SAAS,EAAC;AADK,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAE,KADd;AAEI,QAAA,MAAM,EAAC,SAFX;AAGI,QAAA,MAAM,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,gBAAqC;AAAA,YAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;AAClC,eACI,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAJR,CADJ;AASH,OAdL,CAHA,CADJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKT,KAAL,CAAWJ,yBAAX,KAAuC,EAAvC,GAA4C,IAA5C,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKI,KAAL,CAAWE,YAAX,CAAwBQ,IAA5B,CADJ,EAEI;AAAK,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWJ,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFR,CAtBJ,CADJ;AAsCH;;;;EA7EoCrB,S;;SAApBK,W","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport request from 'superagent';\r\n\r\nconst CLOUDINARY_UPLOAD_PRESET = 'mockfinal19'\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/dv7rbbhuf/upload'\r\n\r\n\r\nexport default class DropzoneImg extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            uploadedFileCloudinaryUrl: '',\r\n            progess:0\r\n        };\r\n    }\r\n\r\n    onImageDrop(files) {\r\n        this.setState({\r\n            uploadedFile: files[0]\r\n        })\r\n        this.handleImageUpload(files[0])\r\n        \r\n    }\r\n    handleImageUpload=(file,progess)=> {\r\n       \r\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\r\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n            .field('file',file).field('fileuploadprogress',progess);\r\n        upload.end((err,response)=>{\r\n            if(err){\r\n                console.error(err);\r\n            }\r\n            if(response.body.secure_url !== ''){\r\n                this.setState({\r\n                    uploadedFileCloudinaryUrl: response.body.secure_url\r\n                })\r\n                this.props.onHandleAvatar(response.body.secure_url)\r\n                \r\n            }\r\n        })\r\n        console.log(file.load)\r\n               \r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"FileUpload\" style={{ height:'4em',\r\n                background: '#ccc', textAlign:'center'\r\n                }}>\r\n                <Dropzone \r\n                    multiple={false}\r\n                    accept=\"image/*\"\r\n                    onDrop={this.onImageDrop.bind(this)}>\r\n                    {({ getRootProps, getInputProps }) => {\r\n                        return (\r\n                            <div {...getRootProps()} >\r\n\r\n                                <input {...getInputProps()} />\r\n                                {\r\n                                    <p > Kéo ảnh hoặc click để chọn ảnh </p>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }}\r\n\r\n                </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {this.state.uploadedFileCloudinaryUrl==='' ? null :\r\n                        <div>\r\n                            <p>{this.state.uploadedFile.name}</p>\r\n                            <img src={this.state.uploadedFileCloudinaryUrl}/>\r\n                          \r\n                            \r\n                        </div>\r\n                       \r\n\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}