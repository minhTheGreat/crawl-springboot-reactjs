{"ast":null,"code":"import _classCallCheck from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\NoteJS\\\\final\\\\src\\\\views\\\\UpLoadImg.js\";\nimport React, { Component } from 'react';\nimport { storage } from './../Config/configFireBase';\n\nvar ImageUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageUpload, _Component);\n\n  function ImageUpload(props) {\n    var _this;\n\n    _classCallCheck(this, ImageUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ImageUpload).call(this, props));\n\n    _this.handleChange = function (e) {\n      if (e.target.files[0]) {\n        var image = e.target.files[0];\n\n        _this.setState(function () {\n          return {\n            image: image\n          };\n        });\n      }\n    };\n\n    _this.handleUpload = function () {\n      var image = _this.state.image;\n      var uploadTask = storage.ref(\"images/\".concat(image.name)).put(image);\n      uploadTask.on('state_changed', function (snapshot) {\n        // progrss function ....\n        var progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n\n        _this.setState({\n          progress: progress\n        });\n      }, function (error) {\n        // error function ....\n        console.log(error);\n      }, function () {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(function (url) {\n          console.log(url);\n\n          _this.setState({\n            url: url\n          });\n\n          _this.props.onGetUrl(url);\n        });\n      });\n    };\n\n    _this.URL = function (url) {\n      console.log(url);\n    };\n\n    _this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUpload = _this.handleUpload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ImageUpload, [{\n    key: \"render\",\n    value: function render() {\n      var URL = this.props.URL;\n      this.URL(URL);\n      var style = {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      };\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"progress\", {\n        value: this.state.progress,\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Upload\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        src: this.state.url || this.props.URL,\n        alt: \"Uploaded images\",\n        height: \"150\",\n        width: \"250\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageUpload;\n}(Component);\n\nexport default ImageUpload;","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\views\\UpLoadImg.js"],"names":["React","Component","storage","ImageUpload","props","handleChange","e","target","files","image","setState","handleUpload","state","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","onGetUrl","URL","bind","style","display","flexDirection","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { storage } from './../Config/configFireBase';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: null,\n      url: '',\n      progress: 0\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  }\n  handleUpload = () => {\n    const { image } = this.state;\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on('state_changed',\n      (snapshot) => {\n        // progrss function ....\n        const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n        this.setState({ progress });\n      },\n      (error) => {\n        // error function ....\n        console.log(error);\n      },\n      () => {\n        // complete function ....\n        storage.ref('images').child(image.name).getDownloadURL().then(url => {\n          console.log(url);\n          this.setState({ url });\n          this.props.onGetUrl(url)\n        })\n      });\n  }\n  URL = (url) => {\n    console.log(url)\n\n  }\n  render() {\n    var { URL } = this.props\n    this.URL(URL)\n    const style = {\n\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n\n    };\n\n    return (\n      <div style={style}>\n        {<progress value={this.state.progress} max=\"100\" />}\n        <br />\n        <input type=\"file\" onChange={this.handleChange} />\n        <button onClick={this.handleUpload}>Upload</button>\n        <br />\n        {<img src={this.state.url || this.props.URL} alt=\"Uploaded images\" height=\"150\" width=\"250\" />}\n      </div>\n    )\n  }\n}\n\nexport default ImageUpload;"]},"metadata":{},"sourceType":"module"}