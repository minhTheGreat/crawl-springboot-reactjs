{"ast":null,"code":"import _defineProperty from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\NoteJS\\\\final\\\\src\\\\views\\\\Login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as AuthAction from '../../actions/userActions';\nimport LoginForm from './LoginForm';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _this.onValidation = function (username, password) {\n      var emailPatt = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n\n      if (username.include(\"@\")) {\n        var isEmailCorrect = emailPatt.test(username);\n\n        if (isEmailCorrect) {\n          _this.setState({\n            isEmailCorrect: true\n          });\n        } else {\n          _this.setState({\n            isEmailCorrect: false\n          });\n        }\n      }\n    };\n\n    _this.handleChange = function (name, value) {\n      _this.setState(_defineProperty({}, name, value));\n\n      console.log(_this.state.username);\n    };\n\n    _this.handleSubmit = function (values) {\n      var username = values.username,\n          password = values.password;\n\n      _this.props.actions.login(username, password);\n    };\n\n    _this.state = {\n      username: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var loginFailed = this.props.loginFailed;\n      return React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(LoginForm, {\n        isLoginFailed: loginFailed,\n        onSubmit: function onSubmit(values) {\n          _this2.handleSubmit(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginFailed: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(AuthAction, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\views\\Login\\index.js"],"names":["React","Component","connect","bindActionCreators","AuthAction","LoginForm","Login","props","onValidation","username","password","emailPatt","include","isEmailCorrect","test","setState","handleChange","name","value","console","log","state","handleSubmit","values","actions","login","loginFailed","mapStateToProps","authentication","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,UAAZ,MAA4B,2BAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAQnBC,YARmB,GAQN,UAACC,QAAD,EAAUC,QAAV,EAAqB;AAChC,UAAIC,SAAS,GAAE,sCAAf;;AACA,UAAGF,QAAQ,CAACG,OAAT,CAAiB,GAAjB,CAAH,EAAyB;AACvB,YAAIC,cAAc,GAAEF,SAAS,CAACG,IAAV,CAAeL,QAAf,CAApB;;AACA,YAAGI,cAAH,EAAkB;AAChB,gBAAKE,QAAL,CAAc;AAACF,YAAAA,cAAc,EAAC;AAAhB,WAAd;AACD,SAFD,MAEK;AACH,gBAAKE,QAAL,CAAc;AAACF,YAAAA,cAAc,EAAC;AAAhB,WAAd;AACD;AACF;AACF,KAlBkB;;AAAA,UAmBnBG,YAnBmB,GAmBJ,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC9B,YAAKH,QAAL,qBAAiBE,IAAjB,EAAwBC,KAAxB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAL,CAAWZ,QAAvB;AACD,KAtBkB;;AAAA,UAuBnBa,YAvBmB,GAuBJ,UAACC,MAAD,EAAY;AAAA,UACjBd,QADiB,GACMc,MADN,CACjBd,QADiB;AAAA,UACPC,QADO,GACMa,MADN,CACPb,QADO;;AAEzB,YAAKH,KAAL,CAAWiB,OAAX,CAAmBC,KAAnB,CAAyBhB,QAAzB,EAAmCC,QAAnC;AACD,KA1BkB;;AAEjB,UAAKW,KAAL,GAAa;AACXZ,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFiB;AAOlB;;;;6BAqBQ;AAAA;;AAAA,UACEgB,WADF,GACmB,KAAKnB,KADxB,CACEmB,WADF;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AACE,QAAA,aAAa,EAAEA,WADjB;AAEE,QAAA,QAAQ,EAAE,kBAACH,MAAD,EAAY;AACpB,UAAA,MAAI,CAACD,YAAL,CAAkBC,MAAlB;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF;AAWD;;;;EA1CiBtB,S;;AA6CpB,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAACN,KAAD;AAAA,SAAY;AAClCK,IAAAA,WAAW,EAAEL,KAAK,CAACO;AADe,GAAZ;AAAA,CAAxB;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCN,IAAAA,OAAO,EAAErB,kBAAkB,CAACC,UAAD,EAAa0B,QAAb;AADW,GAAL;AAAA,CAAnC;;AAIA,eAAe5B,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,KAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport * as AuthAction from '../../actions/userActions';\nimport LoginForm from './LoginForm';\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: ''\n    }\n\n  }\n  onValidation=(username,password)=>{\n    let emailPatt =/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n    if(username.include(\"@\")){\n      let isEmailCorrect= emailPatt.test(username);\n      if(isEmailCorrect){\n        this.setState({isEmailCorrect:true})\n      }else{\n        this.setState({isEmailCorrect:false})\n      }\n    }\n  }\n  handleChange = (name, value) => {\n    this.setState({ [name]: value })\n    console.log(this.state.username)\n  }\n  handleSubmit = (values) => {\n    const { username, password } = values\n    this.props.actions.login(username, password)\n  }\n\n  render() {\n    const {  loginFailed  } = this.props\n    return (\n      <div className=\"form\">\n        \n          <LoginForm\n            isLoginFailed={loginFailed}\n            onSubmit={(values) => {\n              this.handleSubmit(values)\n            }}\n          />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loginFailed: state.authentication\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(AuthAction, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}