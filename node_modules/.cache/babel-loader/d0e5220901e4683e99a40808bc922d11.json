{"ast":null,"code":"import _objectSpread from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as Types from '../Config/managerConstant';\nvar initialState = {\n  sources: [],\n  totalPages: 1\n};\n\nvar findIndex = function findIndex(sources, id) {\n  var result = -1;\n  sources.forEach(function (source, index) {\n    if (source.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar sources = function sources() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index = -1;\n  var id = action.id;\n\n  switch (action.type) {\n    case Types.FETCH_SOURCE:\n      return _objectSpread({}, state, {\n        sources: action.sources,\n        totalPages: action.totalPages\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default sources;","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\reducers\\sourceReducer.js"],"names":["Types","initialState","sources","totalPages","findIndex","id","result","forEach","source","index","state","action","type","FETCH_SOURCE"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAEA,IAAIC,YAAY,GAAC;AACbC,EAAAA,OAAO,EAAC,EADK;AAEbC,EAAAA,UAAU,EAAC;AAFE,CAAjB;;AAIA,IAAMC,SAAS,GAAC,SAAVA,SAAU,CAACF,OAAD,EAASG,EAAT,EAAc;AAC1B,MAAIC,MAAM,GAAC,CAAC,CAAZ;AACAJ,EAAAA,OAAO,CAACK,OAAR,CAAgB,UAACC,MAAD,EAAQC,KAAR,EAAkB;AAC9B,QAAGD,MAAM,CAACH,EAAP,KAAYA,EAAf,EAAkB;AACdC,MAAAA,MAAM,GAACG,KAAP;AACH;AAEJ,GALD;AAMA,SAAOH,MAAP;AACH,CATD;;AAUA,IAAMJ,OAAO,GAAC,SAARA,OAAQ,GAA6B;AAAA,MAA5BQ,KAA4B,uEAAtBT,YAAsB;AAAA,MAATU,MAAS;AACvC,MAAIF,KAAK,GAAC,CAAC,CAAX;AADuC,MAEhCJ,EAFgC,GAE5BM,MAF4B,CAEhCN,EAFgC;;AAGvC,UAAOM,MAAM,CAACC,IAAd;AACI,SAAKZ,KAAK,CAACa,YAAX;AACI,+BACOH,KADP;AAEIR,QAAAA,OAAO,EAAES,MAAM,CAACT,OAFpB;AAGIC,QAAAA,UAAU,EAACQ,MAAM,CAACR;AAHtB;;AAMJ;AACI,aAAOO,KAAP;AATR;AAYH,CAfD;;AAgBA,eAAeR,OAAf","sourcesContent":["import * as Types from '../Config/managerConstant';\r\n\r\nvar initialState={\r\n    sources:[],\r\n    totalPages:1\r\n}\r\nconst findIndex=(sources,id)=>{\r\n    var result=-1;\r\n    sources.forEach((source,index) => {\r\n        if(source.id===id){\r\n            result=index\r\n        }\r\n        \r\n    });\r\n    return result;\r\n}\r\nconst sources=(state=initialState,action)=>{\r\n    var index=-1;\r\n    const {id}=action\r\n    switch(action.type){\r\n        case Types.FETCH_SOURCE:\r\n            return{\r\n                ...state,\r\n                sources: action.sources,\r\n                totalPages:action.totalPages\r\n            }\r\n\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\nexport default sources"]},"metadata":{},"sourceType":"module"}