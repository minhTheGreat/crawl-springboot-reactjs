{"ast":null,"code":"import * as Types from '../Config/managerConstant';\nimport API from '../utils/api'; //fetch User\n\nexport var actFetchUsersRequest = function actFetchUsersRequest() {\n  return function (dispatch) {\n    return API.get('/users').then(function (res) {\n      dispatch(actFetchUsers(res.data));\n    });\n  };\n};\nexport var actFetchUsers = function actFetchUsers(users) {\n  return {\n    type: Types.FETCH_USERS,\n    users: users\n  };\n}; //Delete user\n\nexport var actDeleteUsersRequest = function actDeleteUsersRequest(id) {\n  return function (dispatch) {\n    return API.delete(\"/users/\".concat(id)).then(function (res) {\n      dispatch(actDeleteUsers(res.id));\n    });\n  };\n};\nexport var actDeleteUsers = function actDeleteUsers(id) {\n  return {\n    type: Types.DELETE_USER,\n    id: id\n  };\n}; //Add new user\n\nexport var actAddUserRequest = function actAddUserRequest(user) {\n  return function (dispatch) {\n    return API.post('/users/', user).then(function (res) {\n      dispatch(actAddUser(res.data));\n    });\n  };\n};\nexport var actAddUser = function actAddUser(user) {\n  return {\n    type: Types.ADD_USER,\n    user: user\n  };\n}; //get user in create table\n\nexport var actGetUserRequest = function actGetUserRequest(id) {\n  return function (dispatch) {\n    return API.get(\"/users/\".concat(id)).then(function (res) {\n      dispatch(actGetUser(res.data));\n    });\n  };\n};\nexport var actGetUser = function actGetUser(user) {\n  return {\n    type: Types.EDIT_USER,\n    user: user\n  };\n}; //update user\n\nexport var actUpdateUserRequest = function actUpdateUserRequest(user) {\n  return function (dispatch) {\n    return API.put(\"/users/\".concat(user.id), user).then(function (res) {\n      dispatch(actUpdateUser(res.data));\n    });\n  };\n};\nexport var actUpdateUser = function actUpdateUser(user) {\n  return {\n    type: Types.UPDATE_USER,\n    user: user\n  };\n};","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\actions\\managerAction.js"],"names":["Types","API","actFetchUsersRequest","dispatch","get","then","res","actFetchUsers","data","users","type","FETCH_USERS","actDeleteUsersRequest","id","delete","actDeleteUsers","DELETE_USER","actAddUserRequest","user","post","actAddUser","ADD_USER","actGetUserRequest","actGetUser","EDIT_USER","actUpdateUserRequest","put","actUpdateUser","UPDATE_USER"],"mappings":"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","sourcesContent":["import * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\n\n\n//fetch User\nexport const actFetchUsersRequest=()=>{\n    return (dispatch)=>{\n        return API.get('/users').then(res=>{\n            dispatch(actFetchUsers(res.data))\n        })\n    }\n}\n\nexport const actFetchUsers= (users)=>{\n    return{\n        type:Types.FETCH_USERS,\n        users\n    }\n}\n//Delete user\nexport const actDeleteUsersRequest=(id)=>{\n    return (dispatch)=>{\n        return API.delete(`/users/${id}`).then(res=>{\n            dispatch(actDeleteUsers(res.id))\n        })\n    }\n}\nexport const actDeleteUsers=(id)=>{\n    return{\n        type:Types.DELETE_USER,\n        id\n    }\n}\n//Add new user\nexport const actAddUserRequest=(user)=>{\n    return dispatch=>{\n        return API.post('/users/',user).then(res=>{\n            dispatch(actAddUser(res.data))\n        })\n    }\n}\nexport const actAddUser=(user)=>{\n    return {\n        type: Types.ADD_USER,\n        user\n    }\n}\n//get user in create table\nexport const actGetUserRequest=(id)=>{\n    return dispatch=>{\n        return API.get(`/users/${id}`).then(res=>{\n            dispatch(actGetUser(res.data))\n        })\n    }\n}\n\nexport const actGetUser=(user)=>{\n    return {\n        type: Types.EDIT_USER,\n        user\n    }\n}\n//update user\nexport const actUpdateUserRequest=(user)=>{\n    return dispatch=>{\n        return API.put(`/users/${user.id}`,user).then(res=>{\n            dispatch(actUpdateUser(res.data))\n        })\n    }\n}\nexport const actUpdateUser=(user)=>{\n    return {\n        type:Types.UPDATE_USER,\n        user\n    }\n}"]},"metadata":{},"sourceType":"module"}