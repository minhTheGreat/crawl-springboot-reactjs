{"ast":null,"code":"import _toConsumableArray from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as Types from '../Config/managerConstant';\nvar initialState = {\n  users: [],\n  totalPages: 1\n};\n\nvar findIndex = function findIndex(users, id) {\n  var result = -1;\n  users.forEach(function (user, index) {\n    if (user.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar users = function users() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index = -1;\n  var id = action.id,\n      user = action.user;\n  console.log(\"action---->\", action, user);\n\n  switch (action.type) {\n    case Types.FETCH_USERS:\n      return _objectSpread({}, state, {\n        users: action.users,\n        totalPages: action.totalPages\n      });\n\n    case Types.DELETE_USER:\n      index = findIndex(state.users, id);\n      state.users.splice(index, 1); // return [...state].filter(state => state.id !== id)\n\n      return _objectSpread({}, state, {\n        users: _toConsumableArray(state.users),\n        totalPages: (action.totalElement - 1) / 5\n      });\n\n    case Types.ADD_USER:\n      return _objectSpread({}, state, {\n        users: [action.user].concat(_toConsumableArray(state.users))\n      });\n\n    case Types.UPDATE_USER:\n      index = findIndex(state.users, id);\n      state.users[index] = user;\n      console.log(\"update----\", user);\n      return _objectSpread({}, state, {\n        users: _toConsumableArray(state.users),\n        totalPages: action.totalPages\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default users;","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\reducers\\userReducer.js"],"names":["Types","initialState","users","totalPages","findIndex","id","result","forEach","user","index","state","action","console","log","type","FETCH_USERS","DELETE_USER","splice","totalElement","ADD_USER","UPDATE_USER"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,UAAU,EAAC;AAFI,CAAnB;;AAKA,IAAMC,SAAS,GAAC,SAAVA,SAAU,CAACF,KAAD,EAAOG,EAAP,EAAY;AACxB,MAAIC,MAAM,GAAC,CAAC,CAAZ;AACAJ,EAAAA,KAAK,CAACK,OAAN,CAAc,UAACC,IAAD,EAAMC,KAAN,EAAgB;AAC1B,QAAGD,IAAI,CAACH,EAAL,KAAUA,EAAb,EAAgB;AACZC,MAAAA,MAAM,GAACG,KAAP;AACH;AAEJ,GALD;AAMA,SAAOH,MAAP;AACH,CATD;;AAWA,IAAMJ,KAAK,GAAG,SAARA,KAAQ,GAAkC;AAAA,MAAjCQ,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;AAC5C,MAAIF,KAAK,GAAC,CAAC,CAAX;AAD4C,MAErCJ,EAFqC,GAE5BM,MAF4B,CAErCN,EAFqC;AAAA,MAElCG,IAFkC,GAE5BG,MAF4B,CAElCH,IAFkC;AAI5CI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAA3B,EAAmCH,IAAnC;;AACA,UAAQG,MAAM,CAACG,IAAf;AACI,SAAKd,KAAK,CAACe,WAAX;AACA,+BACOL,KADP;AAEIR,QAAAA,KAAK,EAAES,MAAM,CAACT,KAFlB;AAGIC,QAAAA,UAAU,EAAEQ,MAAM,CAACR;AAHvB;;AAKA,SAAKH,KAAK,CAACgB,WAAX;AACIP,MAAAA,KAAK,GAAEL,SAAS,CAACM,KAAK,CAACR,KAAP,EAAaG,EAAb,CAAhB;AACAK,MAAAA,KAAK,CAACR,KAAN,CAAYe,MAAZ,CAAmBR,KAAnB,EAAyB,CAAzB,EAFJ,CAGI;;AACA,+BACOC,KADP;AAEIR,QAAAA,KAAK,qBAAKQ,KAAK,CAACR,KAAX,CAFT;AAGIC,QAAAA,UAAU,EAAG,CAACQ,MAAM,CAACO,YAAP,GAAoB,CAArB,IAAwB;AAHzC;;AAKJ,SAAKlB,KAAK,CAACmB,QAAX;AACI,+BACOT,KADP;AAEIR,QAAAA,KAAK,GAAIS,MAAM,CAACH,IAAX,4BAAmBE,KAAK,CAACR,KAAzB;AAFT;;AAIJ,SAAKF,KAAK,CAACoB,WAAX;AACIX,MAAAA,KAAK,GAACL,SAAS,CAACM,KAAK,CAACR,KAAP,EAAaG,EAAb,CAAf;AACAK,MAAAA,KAAK,CAACR,KAAN,CAAYO,KAAZ,IAAmBD,IAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBL,IAAzB;AACA,+BACOE,KADP;AAEIR,QAAAA,KAAK,qBAAKQ,KAAK,CAACR,KAAX,CAFT;AAGIC,QAAAA,UAAU,EAAEQ,MAAM,CAACR;AAHvB;;AAKJ;AAAS,aAAOO,KAAP;AA9Bb;AAgCH,CArCD;;AAsCA,eAAeR,KAAf","sourcesContent":["import * as Types from '../Config/managerConstant';\r\n\r\nvar initialState = {\r\n    users: [],\r\n    totalPages:1\r\n};\r\n\r\nconst findIndex=(users,id)=>{\r\n    var result=-1;\r\n    users.forEach((user,index) => {\r\n        if(user.id===id){\r\n            result=index\r\n        }\r\n        \r\n    });\r\n    return result;\r\n}\r\n\r\nconst users = (state = initialState, action) => {\r\n    var index=-1;\r\n    const {id,user}=action\r\n\r\n    console.log(\"action---->\", action, user)\r\n    switch (action.type) {\r\n        case Types.FETCH_USERS:\r\n        return {\r\n            ...state,\r\n            users: action.users,\r\n            totalPages: action.totalPages\r\n        }\r\n        case Types.DELETE_USER:\r\n            index= findIndex(state.users,id)\r\n            state.users.splice(index,1)\r\n            // return [...state].filter(state => state.id !== id)\r\n            return {\r\n                ...state,\r\n                users:[...state.users],\r\n                totalPages: ((action.totalElement-1)/5)\r\n            }\r\n        case Types.ADD_USER:\r\n            return {\r\n                ...state,\r\n                users: [ action.user,...state.users],\r\n            }\r\n        case Types.UPDATE_USER:\r\n            index=findIndex(state.users,id)\r\n            state.users[index]=user;\r\n            console.log(\"update----\",user)\r\n            return {\r\n                ...state,\r\n                users:[...state.users],\r\n                totalPages: action.totalPages\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport default users;"]},"metadata":{},"sourceType":"module"}