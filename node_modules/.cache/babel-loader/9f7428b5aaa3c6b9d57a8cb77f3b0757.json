{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api'; //fetch User\n\nexport var actFetchUsersRequest = function actFetchUsersRequest(currentPage, size) {\n  return function (dispatch) {\n    return API.get(\"/userany/all/?page=\".concat(currentPage, \"&size=\").concat(size)).then(function (res) {\n      dispatch(actFetchUsers(res.data.content, res.data.totalPages, res.data.totalElement));\n    });\n  };\n};\nexport var actFetchUsers = function actFetchUsers(users, totalPages, totalElement) {\n  return {\n    type: Types.FETCH_USERS,\n    users: users,\n    totalPages: totalPages,\n    totalElement: totalElement\n  };\n}; //Delete user\n\nexport var actDeleteUsersRequest = function actDeleteUsersRequest(id) {\n  return function (dispatch) {\n    return API.delete(\"/userany/\".concat(id)).then(function (res) {\n      dispatch(actDeleteUsers(id));\n    });\n  };\n};\nexport var actDeleteUsers = function actDeleteUsers(id) {\n  return {\n    type: Types.DELETE_USER,\n    id: id\n  };\n}; //Add new user\n// export const actAddUserRequest= (currentPage,size,user)=>{\n//     return dispatch=>{\n//         return API.post('/auth/signupbyadmin',user).then(res=>{\n//             dispatch(actAddUser(res.data.users)\n//            )\n//         }\n//         )\n//     }\n// }\n\nexport var actAddUserRequest = function actAddUserRequest(user) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var _ref2, _user;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.post('/auth/signupbyadmin', {\n                  user: _user\n                });\n\n              case 3:\n                _ref2 = _context.sent;\n                _user = _ref2.user;\n                dispatch({\n                  type: Types.ADD_USER,\n                  user: _user\n                });\n                dispatch(actFetchUsersRequest(0, 5));\n                _context.next = 11;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var actAddUser = function actAddUser(user) {\n  return {\n    type: Types.ADD_USER,\n    user: user\n  };\n}; //get user in create table\n\nexport var actGetUserRequest = function actGetUserRequest(id) {\n  return function (dispatch) {\n    return API.get(\"/userany/\".concat(id)).then(function (res) {\n      dispatch(actGetUser(res.data));\n    });\n  };\n};\nexport var actGetUser = function actGetUser(user) {\n  return {\n    type: Types.EDIT_USER,\n    user: user\n  };\n}; //update user\n\nexport var actUpdateUserRequest = function actUpdateUserRequest(id, user) {\n  return function (dispatch) {\n    return API.put(\"/userany/\".concat(id), user).then(function (res) {\n      dispatch(actUpdateUser(res.data.users));\n    });\n  };\n};\nexport var actUpdateUser = function actUpdateUser(user) {\n  return {\n    type: Types.UPDATE_USER,\n    user: user\n  };\n}; //find user\n\nexport var actFindUserToStore = function actFindUserToStore(user) {\n  return {\n    type: Types.FIND_USER,\n    user: user\n  };\n};\nexport var actFindUserRequest = function actFindUserRequest(keyword) {\n  return function (dispatch) {\n    return API.get(\"/userany/find/\".concat(keyword)).then(function (reps) {\n      dispatch(actFindUserToStore(reps.data));\n      console.log(reps);\n    });\n  };\n};","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\actions\\managerAction.js"],"names":["Types","API","actFetchUsersRequest","currentPage","size","dispatch","get","then","res","actFetchUsers","data","content","totalPages","totalElement","users","type","FETCH_USERS","actDeleteUsersRequest","id","delete","actDeleteUsers","DELETE_USER","actAddUserRequest","user","post","ADD_USER","actAddUser","actGetUserRequest","actGetUser","EDIT_USER","actUpdateUserRequest","put","actUpdateUser","UPDATE_USER","actFindUserToStore","FIND_USER","actFindUserRequest","keyword","reps","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CAGA;;AACA,OAAO,IAAMC,oBAAoB,GAAC,SAArBA,oBAAqB,CAACC,WAAD,EAAaC,IAAb,EAAoB;AAClD,SAAO,UAACC,QAAD,EAAY;AACf,WAAOJ,GAAG,CAACK,GAAJ,8BAA8BH,WAA9B,mBAAkDC,IAAlD,GAA0DG,IAA1D,CAA+D,UAAAC,GAAG,EAAE;AACvEH,MAAAA,QAAQ,CAACI,aAAa,CAACD,GAAG,CAACE,IAAJ,CAASC,OAAV,EAAkBH,GAAG,CAACE,IAAJ,CAASE,UAA3B,EAAsCJ,GAAG,CAACE,IAAJ,CAASG,YAA/C,CAAd,CAAR;AAEH,KAHM,CAAP;AAIH,GALD;AAMH,CAPM;AASP,OAAO,IAAMJ,aAAa,GAAE,SAAfA,aAAe,CAACK,KAAD,EAAOF,UAAP,EAAkBC,YAAlB,EAAiC;AACzD,SAAM;AACFE,IAAAA,IAAI,EAACf,KAAK,CAACgB,WADT;AAEFF,IAAAA,KAAK,EAALA,KAFE;AAEIF,IAAAA,UAAU,EAAVA,UAFJ;AAEeC,IAAAA,YAAY,EAAZA;AAFf,GAAN;AAIH,CALM,C,CAMP;;AACA,OAAO,IAAMI,qBAAqB,GAAC,SAAtBA,qBAAsB,CAACC,EAAD,EAAM;AACrC,SAAO,UAACb,QAAD,EAAY;AACf,WAAOJ,GAAG,CAACkB,MAAJ,oBAAuBD,EAAvB,GAA6BX,IAA7B,CAAkC,UAAAC,GAAG,EAAE;AAC1CH,MAAAA,QAAQ,CAACe,cAAc,CAACF,EAAD,CAAf,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAOP,OAAO,IAAME,cAAc,GAAC,SAAfA,cAAe,CAACF,EAAD,EAAM;AAC9B,SAAM;AACFH,IAAAA,IAAI,EAACf,KAAK,CAACqB,WADT;AAEFH,IAAAA,EAAE,EAAFA;AAFE,GAAN;AAIH,CALM,C,CAMP;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AACA,OAAO,IAAMI,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAS,iBAAMlB,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEXJ,GAAG,CAACuB,IAAJ,CAAS,qBAAT,EAA+B;AAACD,kBAAAA,IAAI,EAAJA;AAAD,iBAA/B,CAFW;;AAAA;AAAA;AAExBA,gBAAAA,KAFwB,SAExBA,IAFwB;AAGhClB,gBAAAA,QAAQ,CAAC;AAACU,kBAAAA,IAAI,EAAEf,KAAK,CAACyB,QAAb;AAAsBF,kBAAAA,IAAI,EAAJA;AAAtB,iBAAD,CAAR;AACAlB,gBAAAA,QAAQ,CAACH,oBAAoB,CAAC,CAAD,EAAG,CAAH,CAArB,CAAR;AAJgC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWP,OAAO,IAAMwB,UAAU,GAAC,SAAXA,UAAW,CAACH,IAAD,EAAQ;AAC5B,SAAO;AACHR,IAAAA,IAAI,EAAEf,KAAK,CAACyB,QADT;AAEHF,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,IAAMI,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACT,EAAD,EAAM;AACjC,SAAO,UAAAb,QAAQ,EAAE;AACb,WAAOJ,GAAG,CAACK,GAAJ,oBAAoBY,EAApB,GAA0BX,IAA1B,CAA+B,UAAAC,GAAG,EAAE;AACvCH,MAAAA,QAAQ,CAACuB,UAAU,CAACpB,GAAG,CAACE,IAAL,CAAX,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAQP,OAAO,IAAMkB,UAAU,GAAC,SAAXA,UAAW,CAACL,IAAD,EAAQ;AAC5B,SAAO;AACHR,IAAAA,IAAI,EAAEf,KAAK,CAAC6B,SADT;AAEHN,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,IAAMO,oBAAoB,GAAC,SAArBA,oBAAqB,CAACZ,EAAD,EAAIK,IAAJ,EAAW;AACzC,SAAO,UAAAlB,QAAQ,EAAE;AACb,WAAOJ,GAAG,CAAC8B,GAAJ,oBAAoBb,EAApB,GAAyBK,IAAzB,EAA+BhB,IAA/B,CAAoC,UAAAC,GAAG,EAAE;AAC5CH,MAAAA,QAAQ,CAAC2B,aAAa,CAACxB,GAAG,CAACE,IAAJ,CAASI,KAAV,CAAd,CAAR;AAEH,KAHM,CAAP;AAKH,GAND;AAOH,CARM;AASP,OAAO,IAAMkB,aAAa,GAAC,SAAdA,aAAc,CAACT,IAAD,EAAQ;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAACf,KAAK,CAACiC,WADR;AAEHV,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAACX,IAAD,EAAU;AACxC,SAAO;AACHR,IAAAA,IAAI,EAAEf,KAAK,CAACmC,SADT;AAEHZ,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAKH,CANM;AAOP,OAAO,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AAC3C,SAAO,UAAChC,QAAD,EAAc;AACjB,WAAOJ,GAAG,CAACK,GAAJ,yBAAyB+B,OAAzB,GAAoC9B,IAApC,CAAyC,UAAA+B,IAAI,EAAI;AACpDjC,MAAAA,QAAQ,CAAC6B,kBAAkB,CAACI,IAAI,CAAC5B,IAAN,CAAnB,CAAR;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAHM,CAAP;AAIH,GALD;AAMH,CAPM","sourcesContent":["import * as Types from '../Config/managerConstant';\r\nimport API from '../utils/api';\r\n\r\n\r\n//fetch User\r\nexport const actFetchUsersRequest=(currentPage,size)=>{\r\n    return (dispatch)=>{\r\n        return API.get(`/userany/all/?page=${currentPage}&size=${size}`).then(res=>{\r\n            dispatch(actFetchUsers(res.data.content,res.data.totalPages,res.data.totalElement))\r\n          \r\n        })\r\n    }\r\n}\r\n\r\nexport const actFetchUsers= (users,totalPages,totalElement)=>{\r\n    return{\r\n        type:Types.FETCH_USERS,\r\n        users,totalPages,totalElement\r\n    }\r\n}\r\n//Delete user\r\nexport const actDeleteUsersRequest=(id)=>{\r\n    return (dispatch)=>{\r\n        return API.delete(`/userany/${id}`).then(res=>{\r\n            dispatch(actDeleteUsers(id))\r\n        })\r\n    }\r\n}\r\nexport const actDeleteUsers=(id)=>{\r\n    return{\r\n        type:Types.DELETE_USER,\r\n        id\r\n    }\r\n}\r\n//Add new user\r\n// export const actAddUserRequest= (currentPage,size,user)=>{\r\n//     return dispatch=>{\r\n//         return API.post('/auth/signupbyadmin',user).then(res=>{\r\n//             dispatch(actAddUser(res.data.users)\r\n//            )\r\n           \r\n//         }\r\n        \r\n//         )\r\n//     }\r\n// }\r\nexport const actAddUserRequest=(user)=> async dispatch=>{\r\n    try{    \r\n        const  {user} =await API.post('/auth/signupbyadmin',{user})\r\n        dispatch({type: Types.ADD_USER,user})\r\n        dispatch(actFetchUsersRequest(0,5))\r\n\r\n    }catch(err){\r\n\r\n    }\r\n\r\n}\r\nexport const actAddUser=(user)=>{\r\n    return {\r\n        type: Types.ADD_USER,\r\n        user\r\n    }\r\n}\r\n//get user in create table\r\nexport const actGetUserRequest=(id)=>{\r\n    return dispatch=>{\r\n        return API.get(`/userany/${id}`).then(res=>{\r\n            dispatch(actGetUser(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const actGetUser=(user)=>{\r\n    return {\r\n        type: Types.EDIT_USER,\r\n        user\r\n    }\r\n}\r\n//update user\r\nexport const actUpdateUserRequest=(id,user)=>{\r\n    return dispatch=>{\r\n        return API.put(`/userany/${id}`,user).then(res=>{\r\n            dispatch(actUpdateUser(res.data.users))\r\n         \r\n        })\r\n\r\n    }\r\n}\r\nexport const actUpdateUser=(user)=>{\r\n    return {\r\n        type:Types.UPDATE_USER,\r\n        user\r\n    }\r\n}\r\n//find user\r\nexport const actFindUserToStore = (user) => {\r\n    return {\r\n        type: Types.FIND_USER,\r\n        user\r\n        \r\n    }\r\n}\r\nexport const actFindUserRequest = (keyword) => {\r\n    return (dispatch) => {\r\n        return API.get(`/userany/find/${keyword}`).then(reps => {\r\n            dispatch(actFindUserToStore(reps.data));\r\n            console.log(reps)\r\n        });\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}