{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\n{\n  /* luu data tu sever ve stogre*/\n}\nexport var actFetchCategory = function actFetchCategory(currentPage, size) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.get(\"/category/getall/?page=\".concat(currentPage, \"&size=\").concat(size));\n\n              case 3:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                dispatch({\n                  type: Types.FETCH_CATEGORY,\n                  content: data.content,\n                  totalPages: data.totalPages\n                });\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; //delete\n\nexport var deleteCategoryStore = function deleteCategoryStore(id) {\n  return {\n    type: Types.DELETE_CATEGORY,\n    id: id\n  };\n};\nexport var deleteCategoryRequest = function deleteCategoryRequest(id) {\n  return function (dispath) {\n    return API.delete(\"category/\".concat(id)).then(function (reps) {\n      dispath(deleteCategoryStore(id));\n    });\n  };\n}; //update\n\nexport var actUpdateCate = function actUpdateCate(id, cate) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var _ref4, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return API.put(\"/category/\".concat(id), cate);\n\n              case 2:\n                _ref4 = _context2.sent;\n                data = _ref4.data;\n                dispatch({\n                  type: Types.UPDATE_CATEGORY,\n                  payload: data.cates\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n}; //get a category to edit\n\nexport var actEditCate = function actEditCate(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var _ref6, data;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return API.get(\"/category/\".concat(id));\n\n              case 2:\n                _ref6 = _context3.sent;\n                data = _ref6.data;\n                dispatch({\n                  type: Types.EDIT_CATEGORY,\n                  payload: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\actions\\categoryAction.js"],"names":["Types","API","actFetchCategory","currentPage","size","dispatch","get","data","type","FETCH_CATEGORY","content","totalPages","deleteCategoryStore","id","DELETE_CATEGORY","deleteCategoryRequest","dispath","delete","then","reps","actUpdateCate","cate","put","UPDATE_CATEGORY","payload","cates","actEditCate","EDIT_CATEGORY"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA;AAAC;AAAkC;AAEnC,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAcC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuB,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAExBJ,GAAG,CAACK,GAAJ,kCAAkCH,WAAlC,mBAAsDC,IAAtD,EAFwB;;AAAA;AAAA;AAEvCG,gBAAAA,IAFuC,SAEvCA,IAFuC;AAG/CF,gBAAAA,QAAQ,CAAC;AAACG,kBAAAA,IAAI,EAACR,KAAK,CAACS,cAAZ;AAA2BC,kBAAAA,OAAO,EAACH,IAAI,CAACG,OAAxC;AAAgDC,kBAAAA,UAAU,EAACJ,IAAI,CAACI;AAAhE,iBAAD,CAAR;AAH+C;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB,C,CAWP;;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAAQ;AACvC,SAAO;AACHL,IAAAA,IAAI,EAAER,KAAK,CAACc,eADT;AAEHD,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,EAAD,EAAQ;AACzC,SAAO,UAACG,OAAD,EAAa;AAChB,WAAOf,GAAG,CAACgB,MAAJ,oBAAuBJ,EAAvB,GAA6BK,IAA7B,CAAkC,UAAAC,IAAI,EAAI;AAC7CH,MAAAA,OAAO,CAACJ,mBAAmB,CAACC,EAAD,CAApB,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM,C,CAOP;;AACA,OAAO,IAAMO,aAAa,GAAC,SAAdA,aAAc,CAACP,EAAD,EAAIQ,IAAJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAW,kBAAMhB,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAClBJ,GAAG,CAACqB,GAAJ,qBAAqBT,EAArB,GAA0BQ,IAA1B,CADkB;;AAAA;AAAA;AAC/Bd,gBAAAA,IAD+B,SAC/BA,IAD+B;AAEtCF,gBAAAA,QAAQ,CAAE;AAACG,kBAAAA,IAAI,EAACR,KAAK,CAACuB,eAAZ;AAA4BC,kBAAAA,OAAO,EAACjB,IAAI,CAACkB;AAAzC,iBAAF,CAAR;;AAFsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB,C,CAIP;;AACA,OAAO,IAAMC,WAAW,GAAE,SAAbA,WAAa,CAAAb,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG,kBAAMR,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACNJ,GAAG,CAACK,GAAJ,qBAAqBO,EAArB,EADM;;AAAA;AAAA;AACpBN,gBAAAA,IADoB,SACpBA,IADoB;AAE3BF,gBAAAA,QAAQ,CAAC;AAACG,kBAAAA,IAAI,EAACR,KAAK,CAAC2B,aAAZ;AAA0BH,kBAAAA,OAAO,EAACjB;AAAlC,iBAAD,CAAR;;AAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\n{/* luu data tu sever ve stogre*/ }\n\nexport const actFetchCategory = (currentPage, size) => async dispatch => {\n    try {\n        const { data } = await API.get(`/category/getall/?page=${currentPage}&size=${size}`)\n        dispatch({type:Types.FETCH_CATEGORY,content:data.content,totalPages:data.totalPages})\n    } catch (err) {\n\n    }\n\n\n}\n\n//delete\nexport const deleteCategoryStore = (id) => {\n    return {\n        type: Types.DELETE_CATEGORY,\n        id: id\n    }\n}\nexport const deleteCategoryRequest = (id) => {\n    return (dispath) => {\n        return API.delete(`category/${id}`).then(reps => {\n            dispath(deleteCategoryStore(id))\n        });\n    };\n}\n//update\nexport const actUpdateCate=(id,cate)=>async dispatch=>{\nconst {data}= await API.put(`/category/${id}`,cate)\ndispatch ({type:Types.UPDATE_CATEGORY,payload:data.cates})\n}\n//get a category to edit\nexport const actEditCate= id=> async dispatch=>{\n    const {data} = await API.get(`/category/${id}`)\n    dispatch({type:Types.EDIT_CATEGORY,payload:data})\n}\n"]},"metadata":{},"sourceType":"module"}