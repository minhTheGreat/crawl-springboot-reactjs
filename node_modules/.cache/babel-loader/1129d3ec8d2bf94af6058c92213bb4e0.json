{"ast":null,"code":"import _defineProperty from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\NoteJS\\\\final\\\\src\\\\views\\\\Register\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as AuthAction from '../../actions/userActions';\nimport RegisterForm from './RegisterForm';\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n\n    _this.handleChange = function (name, value) {\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.onValidation = function (username, email, password) {\n      var usernamePatt = /^[\\w]{4,20}$/;\n\n      if (password.length >= 6 && usernamePatt.test(username)) {\n        _this.setState({\n          isPasswordCorrect: true\n        });\n\n        _this.setState({\n          isEmailCorrect: true\n        });\n\n        _this.props.actions.login(username, password);\n      }\n\n      if (password.length < 6) {\n        console.log('NOT CORRECT');\n\n        _this.setState({\n          isPasswordCorrect: false\n        });\n      } else {\n        _this.setState({\n          isPasswordCorrect: true\n        });\n      }\n\n      if (!usernamePatt.test(username)) {\n        _this.setState({\n          isEmailCorrect: false\n        });\n      } else {\n        _this.setState({\n          isEmailCorrect: true\n        });\n      }\n    };\n\n    _this.handleSubmit = function (values) {\n      var username = values.username,\n          password = values.password,\n          email = values.email;\n\n      _this.props.actions.register(username, password, email);\n    };\n\n    _this.state = {\n      username: '',\n      email: '',\n      password: '',\n      isUsernameCorrect: true,\n      isEmailCorrect: true,\n      isPassword: true\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var registerFailed = this.props.registerFailed;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(RegisterForm, {\n        isRegisterFailed: registerFailed,\n        onSubmit: function onSubmit(values) {\n          _this2.handleSubmit(values);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    registerFailed: state.authentication\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(AuthAction, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\views\\Register\\index.js"],"names":["React","Component","connect","bindActionCreators","AuthAction","RegisterForm","Register","props","handleChange","name","value","setState","onValidation","username","email","password","usernamePatt","length","test","isPasswordCorrect","isEmailCorrect","actions","login","console","log","handleSubmit","values","register","state","isUsernameCorrect","isPassword","registerFailed","mapStateToProps","authentication","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux';\nimport * as AuthAction from '../../actions/userActions';\nimport RegisterForm from './RegisterForm';\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      isUsernameCorrect:true,\n      isEmailCorrect:true,\n      isPassword:true\n    }\n\n  }\n  handleChange = (name, value) => {\n    this.setState({ [name]: value })\n  }\n  onValidation= (username,email,password)=>{\n    let usernamePatt= /^[\\w]{4,20}$/;\n    if(password.length >= 6 && usernamePatt.test(username)){\n       this.setState({isPasswordCorrect:true})\n       this.setState({isEmailCorrect:true})\n      \n        this.props.actions.login(username, password)\n      \n    }\n    if(password.length<6){\n      console.log('NOT CORRECT')\n      this.setState({isPasswordCorrect:false})\n    }else {\n      this.setState({isPasswordCorrect:true})\n    }\n    if(!usernamePatt.test(username)){\n      this.setState({isEmailCorrect:false})\n    }else{\n      this.setState({isEmailCorrect:true})\n    }\n  }\n  handleSubmit = (values) => {\n    const { username, password, email } = values;\n    this.props.actions.register(username, password, email)\n  }\n  render() {\n    const { registerFailed } = this.props;\n    return (\n      <div>\n\n\n        <RegisterForm\n          isRegisterFailed={registerFailed}\n          onSubmit={(values) => {\n            this.handleSubmit(values)\n          }}\n\n        />\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  registerFailed: state.authentication\n})\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(AuthAction, dispatch)\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n"]},"metadata":{},"sourceType":"module"}