{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\nimport APIvn from '../utils/vnexpress';\nimport history from '../Config/history'; //fetch News\n\nexport var actFetchNewsRequest = function actFetchNewsRequest(currentPage, size) {\n  return function (dispatch) {\n    return API.get(\"/news/getall/?page=\".concat(currentPage, \"&size=\").concat(size)).then(function (res) {\n      dispatch(actFetchNews(res.data.content, res.data.totalPages, res.data.totalElement));\n    });\n  };\n};\nexport var actFetchNews = function actFetchNews(news, totalPages, totalElement) {\n  return {\n    type: Types.FETCH_NEWS,\n    news: news,\n    totalPages: totalPages,\n    totalElement: totalElement\n  };\n}; //crawl news\n\nexport var actCrawlNewsRequest = function actCrawlNewsRequest(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.get(\"/news/crawl/19\");\n\n              case 3:\n                dispatch({\n                  type: Types.CRAWLER\n                });\n                dispatch(actCrawlNewsRequest(0, 20));\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n{\n  /* xoa data tren sever sau do tren stogre*/\n}\nexport var deleteNewStore = function deleteNewStore(id) {\n  return {\n    type: Types.DELETE_NEW,\n    id: id\n  };\n};\nexport var deleteNewsRequest = function deleteNewsRequest(id) {\n  return function (dispath) {\n    return API.delete(\"new/\".concat(id)).then(function (reps) {\n      dispath(deleteNewStore(id));\n    });\n  };\n};\nexport var addNewsRequest = function addNewsRequest(news) {\n  return function (dispath) {\n    return API.post('new', news).then(function (reps) {\n      console.log(reps);\n\n      if (reps.status === 200) {\n        alert('Them thanh cong');\n      }\n    });\n  };\n};","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\actions\\newsAction.js"],"names":["Types","API","APIvn","history","actFetchNewsRequest","currentPage","size","dispatch","get","then","res","actFetchNews","data","content","totalPages","totalElement","news","type","FETCH_NEWS","actCrawlNewsRequest","id","CRAWLER","deleteNewStore","DELETE_NEW","deleteNewsRequest","dispath","delete","reps","addNewsRequest","post","console","log","status","alert"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAQC,OAAR,MAAsB,mBAAtB,C,CAGA;;AACA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,WAAD,EAAcC,IAAd,EAAuB;AACtD,SAAO,UAACC,QAAD,EAAc;AACjB,WAAON,GAAG,CAACO,GAAJ,8BAA8BH,WAA9B,mBAAkDC,IAAlD,GAA0DG,IAA1D,CAA+D,UAAAC,GAAG,EAAI;AACzEH,MAAAA,QAAQ,CAACI,YAAY,CAACD,GAAG,CAACE,IAAJ,CAASC,OAAV,EAAmBH,GAAG,CAACE,IAAJ,CAASE,UAA5B,EAAwCJ,GAAG,CAACE,IAAJ,CAASG,YAAjD,CAAb,CAAR;AAEH,KAHM,CAAP;AAIH,GALD;AAMH,CAPM;AAQP,OAAO,IAAMJ,YAAY,GAAG,SAAfA,YAAe,CAACK,IAAD,EAAOF,UAAP,EAAmBC,YAAnB,EAAoC;AAC5D,SAAO;AACHE,IAAAA,IAAI,EAAEjB,KAAK,CAACkB,UADT;AAEHF,IAAAA,IAAI,EAAJA,IAFG;AAEGF,IAAAA,UAAU,EAAVA,UAFH;AAEeC,IAAAA,YAAY,EAAZA;AAFf,GAAP;AAIH,CALM,C,CAMP;;AACA,OAAO,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAQ,iBAAMb,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAG7BN,GAAG,CAACO,GAAJ,kBAH6B;;AAAA;AAInCD,gBAAAA,QAAQ,CAAC;AAAEU,kBAAAA,IAAI,EAAEjB,KAAK,CAACqB;AAAd,iBAAD,CAAR;AACAd,gBAAAA,QAAQ,CAACY,mBAAmB,CAAC,CAAD,EAAG,EAAH,CAApB,CAAR;AALmC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAYP;AAAC;AAA6C;AAE9C,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACF,EAAD,EAAQ;AAClC,SAAO;AACHH,IAAAA,IAAI,EAAEjB,KAAK,CAACuB,UADT;AAEHH,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAMP,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,EAAD,EAAQ;AACrC,SAAO,UAACK,OAAD,EAAa;AAChB,WAAOxB,GAAG,CAACyB,MAAJ,eAAkBN,EAAlB,GAAwBX,IAAxB,CAA6B,UAAAkB,IAAI,EAAI;AACxCF,MAAAA,OAAO,CAACH,cAAc,CAACF,EAAD,CAAf,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAOP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACZ,IAAD,EAAU;AACpC,SAAO,UAACS,OAAD,EAAa;AAChB,WAAOxB,GAAG,CAAC4B,IAAJ,CAAS,KAAT,EAAgBb,IAAhB,EAAsBP,IAAtB,CAA2B,UAAAkB,IAAI,EAAI;AACtCG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAIA,IAAI,CAACK,MAAL,KAAgB,GAApB,EAAyB;AACrBC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ,KALM,CAAP;AAMH,GAPD;AAQH,CATM","sourcesContent":["\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\nimport APIvn from '../utils/vnexpress'\nimport  history  from '../Config/history'\n\n\n//fetch News\nexport const actFetchNewsRequest = (currentPage, size) => {\n    return (dispatch) => {\n        return API.get(`/news/getall/?page=${currentPage}&size=${size}`).then(res => {\n            dispatch(actFetchNews(res.data.content, res.data.totalPages, res.data.totalElement))\n\n        })\n    }\n}\nexport const actFetchNews = (news, totalPages, totalElement) => {\n    return {\n        type: Types.FETCH_NEWS,\n        news, totalPages, totalElement\n    }\n}\n//crawl news\nexport const actCrawlNewsRequest = (id) => async dispatch => {\n\n    try {\n        await API.get(`/news/crawl/19`)\n        dispatch({ type: Types.CRAWLER })\n        dispatch(actCrawlNewsRequest(0,20))\n    } catch (err) {\n\n    }\n}\n\n\n{/* xoa data tren sever sau do tren stogre*/ }\n\nexport const deleteNewStore = (id) => {\n    return {\n        type: Types.DELETE_NEW,\n        id: id\n    }\n}\nexport const deleteNewsRequest = (id) => {\n    return (dispath) => {\n        return API.delete(`new/${id}`).then(reps => {\n            dispath(deleteNewStore(id))\n        });\n    };\n}\nexport const addNewsRequest = (news) => {\n    return (dispath) => {\n        return API.post('new', news).then(reps => {\n            console.log(reps);\n            if (reps.status === 200) {\n                alert('Them thanh cong');\n            }\n        });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}