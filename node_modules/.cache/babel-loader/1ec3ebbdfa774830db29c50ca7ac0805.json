{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\nimport APIvn from '../utils/vnexpress'; //import API from '../utils/api';\n\n{\n  /* luu data tu sever ve stogre*/\n}\nexport var saveNewsToStore = function saveNewsToStore(news) {\n  return {\n    type: Types.GET_NEWS,\n    news: news\n  };\n};\nexport var saveNewsRequest = function saveNewsRequest() {\n  return function (dispath) {\n    return API.get('/new').then(function (reps) {\n      dispath(saveNewsToStore(reps.data));\n    });\n  };\n};\n{\n  /* xoa data tren sever sau do tren stogre*/\n}\nexport var deleteNewStore = function deleteNewStore(id) {\n  return {\n    type: Types.DELETE_NEW,\n    id: id\n  };\n};\nexport var deleteNewRequest = function deleteNewRequest(id) {\n  return function (dispath) {\n    return API.delete(\"new/\".concat(id)).then(function (reps) {\n      dispath(deleteNewStore(id));\n    });\n  };\n};\nexport var addNewsRequest = function addNewsRequest(news) {\n  return function (dispath) {\n    return API.post('new', news).then(function (reps) {\n      console.log(reps);\n\n      if (reps.status === 200) {\n        alert('Them thanh cong');\n      }\n    });\n  };\n};\nexport var crawlerNews = function crawlerNews() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispacth) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return APIvn.get(\"/thoi-su\");\n\n              case 2:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                dispacth({\n                  type: Types.CRAWLER,\n                  data: data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\actions\\newsAction.js"],"names":["Types","API","APIvn","saveNewsToStore","news","type","GET_NEWS","saveNewsRequest","dispath","get","then","reps","data","deleteNewStore","id","DELETE_NEW","deleteNewRequest","delete","addNewsRequest","post","console","log","status","alert","crawlerNews","dispacth","CRAWLER"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA;AAAC;AAAkC;AAEnC,OAAO,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAACC,IAAD,EAAQ;AACjC,SAAM;AACFC,IAAAA,IAAI,EAACL,KAAK,CAACM,QADT;AAEFF,IAAAA,IAAI,EAACA;AAFH,GAAN;AAIH,CALM;AAMP,OAAO,IAAMG,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AAC7B,SAAO,UAACC,OAAD,EAAW;AACd,WAAOP,GAAG,CAACQ,GAAJ,CAAQ,MAAR,EAAgBC,IAAhB,CAAqB,UAAAC,IAAI,EAAE;AAE9BH,MAAAA,OAAO,CAACL,eAAe,CAACQ,IAAI,CAACC,IAAN,CAAhB,CAAP;AACH,KAHM,CAAP;AAIH,GALD;AAMH,CAPM;AASP;AAAC;AAA6C;AAE9C,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAQ;AAClC,SAAO;AACHT,IAAAA,IAAI,EAAEL,KAAK,CAACe,UADT;AAEHD,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,EAAD,EAAQ;AACpC,SAAO,UAACN,OAAD,EAAa;AAChB,WAAOP,GAAG,CAACgB,MAAJ,eAAkBH,EAAlB,GAAwBJ,IAAxB,CAA6B,UAAAC,IAAI,EAAI;AACxCH,MAAAA,OAAO,CAACK,cAAc,CAACC,EAAD,CAAf,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAOP,OAAO,IAAMI,cAAc,GAAC,SAAfA,cAAe,CAACd,IAAD,EAAQ;AAChC,SAAM,UAACI,OAAD,EAAW;AACb,WAAOP,GAAG,CAACkB,IAAJ,CAAS,KAAT,EAAgBf,IAAhB,EAAsBM,IAAtB,CAA2B,UAAAC,IAAI,EAAI;AACtCS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AACA,UAAGA,IAAI,CAACW,MAAL,KAAc,GAAjB,EACA;AACIC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACH;AACJ,KANM,CAAP;AAOH,GARD;AASH,CAVM;AAWP,OAAO,IAAMC,WAAW,GAAE,SAAbA,WAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAK,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACTvB,KAAK,CAACO,GAAN,CAAU,UAAV,CADS;;AAAA;AAAA;AACvBG,gBAAAA,IADuB,SACvBA,IADuB;AAE9Ba,gBAAAA,QAAQ,CAAC;AAACpB,kBAAAA,IAAI,EAACL,KAAK,CAAC0B,OAAZ;AAAoBd,kBAAAA,IAAI,EAAJA;AAApB,iBAAD,CAAR;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB","sourcesContent":["\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\nimport APIvn from '../utils/vnexpress'\n//import API from '../utils/api';\n{/* luu data tu sever ve stogre*/ }\n\nexport const saveNewsToStore=(news)=>{\n    return{\n        type:Types.GET_NEWS,\n        news:news\n    }\n}\nexport const saveNewsRequest=()=>{\n    return (dispath)=>{\n        return API.get('/new').then(reps=>{\n            \n            dispath(saveNewsToStore(reps.data));\n        });\n    };\n}\n\n{/* xoa data tren sever sau do tren stogre*/ }\n\nexport const deleteNewStore = (id) => {\n    return {\n        type: Types.DELETE_NEW,\n        id: id\n    }\n}\nexport const deleteNewRequest = (id) => {\n    return (dispath) => {\n        return API.delete(`new/${id}`).then(reps => {\n            dispath(deleteNewStore(id))\n        });\n    };\n}\nexport const addNewsRequest=(news)=>{\n    return(dispath)=>{\n        return API.post('new', news).then(reps => {\n            console.log(reps);\n            if(reps.status===200)\n            {  \n                alert('Them thanh cong');\n            }           \n        });\n    };\n}\nexport const crawlerNews= ()=> async dispacth=>{\n const {data} = await APIvn.get(\"/thoi-su\");\n dispacth({type:Types.CRAWLER,data})\n}"]},"metadata":{},"sourceType":"module"}