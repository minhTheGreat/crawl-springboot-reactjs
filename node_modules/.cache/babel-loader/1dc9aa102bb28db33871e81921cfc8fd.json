{"ast":null,"code":"import _toConsumableArray from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as Types from '../Config/managerConstant';\nvar initalState = {\n  news: [],\n  slice: [],\n  totalPages: 1\n};\n\nvar findIndex = function findIndex(news, id) {\n  var result = -1;\n  news.forEach(function (newz, index) {\n    if (newz.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar news = function news() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index = -1;\n  console.log(\"-------news\", action);\n\n  switch (action.type) {\n    case Types.FETCH_NEWS:\n      return _objectSpread({}, state, {\n        news: action.news,\n        totalPages: action.totalPages,\n        loading: false\n      });\n\n    case Types.CRAWLER:\n      return _objectSpread({}, state, {\n        news: _toConsumableArray(state),\n        loading: false\n      });\n\n    case Types.DELETE_NEWS:\n      index = findIndex(state.news, action.payload);\n      state.news.splice(index, 1);\n      return _objectSpread({}, state, {\n        news: _toConsumableArray(state.news)\n      });\n\n    case Types.CRAWLER:\n      return _toConsumableArray(state);\n\n    case Types.HOME:\n      return _objectSpread({}, state, {\n        news: action.news\n      });\n\n    case Types.SLICE:\n      return _objectSpread({}, state, {\n        slice: action.slice\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default news;","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\reducers\\newsReducer.js"],"names":["Types","initalState","news","slice","totalPages","findIndex","id","result","forEach","newz","index","state","action","console","log","type","FETCH_NEWS","loading","CRAWLER","DELETE_NEWS","payload","splice","HOME","SLICE"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAGA,IAAIC,WAAW,GAAG;AACdC,EAAAA,IAAI,EAAE,EADQ;AAEdC,EAAAA,KAAK,EAAC,EAFQ;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;;AAKA,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACH,IAAD,EAAOI,EAAP,EAAc;AAC1B,MAAIC,MAAM,GAAG,CAAC,CAAd;AACAL,EAAAA,IAAI,CAACM,OAAL,CAAa,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,QAAID,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAChBC,MAAAA,MAAM,GAAGG,KAAT;AACH;AACJ,GAJD;AAMA,SAAOH,MAAP;AACH,CATD;;AAUA,IAAML,IAAI,GAAG,SAAPA,IAAO,GAAiC;AAAA,MAAhCS,KAAgC,uEAAxBV,WAAwB;AAAA,MAAXW,MAAW;AAC3C,MAAIF,KAAK,GAAC,CAAC,CAAX;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BF,MAA1B;;AACC,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKf,KAAK,CAACgB,UAAX;AACI,+BACOL,KADP;AAEIT,QAAAA,IAAI,EAAEU,MAAM,CAACV,IAFjB;AAGIE,QAAAA,UAAU,EAAEQ,MAAM,CAACR,UAHvB;AAIIa,QAAAA,OAAO,EAAC;AAJZ;;AAOJ,SAAKjB,KAAK,CAACkB,OAAX;AACI,+BACOP,KADP;AAEIT,QAAAA,IAAI,qBAAMS,KAAN,CAFR;AAGIM,QAAAA,OAAO,EAAC;AAHZ;;AAMJ,SAAKjB,KAAK,CAACmB,WAAX;AACIT,MAAAA,KAAK,GAAGL,SAAS,CAACM,KAAK,CAACT,IAAP,EAAYU,MAAM,CAACQ,OAAnB,CAAjB;AACAT,MAAAA,KAAK,CAACT,IAAN,CAAWmB,MAAX,CAAkBX,KAAlB,EAAwB,CAAxB;AACA,+BACOC,KADP;AAEIT,QAAAA,IAAI,qBAAKS,KAAK,CAACT,IAAX;AAFR;;AAIJ,SAAKF,KAAK,CAACkB,OAAX;AACI,gCAAWP,KAAX;;AACJ,SAAKX,KAAK,CAACsB,IAAX;AACI,+BACOX,KADP;AAEIT,QAAAA,IAAI,EAAEU,MAAM,CAACV;AAFjB;;AAIJ,SAAKF,KAAK,CAACuB,KAAX;AACI,+BACOZ,KADP;AAEIR,QAAAA,KAAK,EAAES,MAAM,CAACT;AAFlB;;AAIJ;AACI,aAAOQ,KAAP;AApCR;AAwCH,CA3CD;;AA4CA,eAAeT,IAAf","sourcesContent":["import * as Types from '../Config/managerConstant';\n\n\nvar initalState = {\n    news: [],\n    slice:[],\n    totalPages: 1,\n};\nvar findIndex = (news, id) => {\n    var result = -1;\n    news.forEach((newz, index) => {\n        if (newz.id === id) {\n            result = index;\n        }\n    });\n  \n    return result;\n}\nconst news = (state = initalState, action) => {\n   var index=-1\n   console.log(\"-------news\",action)\n    switch (action.type) {\n        case Types.FETCH_NEWS:\n            return {\n                ...state,\n                news: action.news,\n                totalPages: action.totalPages,\n                loading:false\n             \n            }\n        case Types.CRAWLER:\n            return {\n                ...state,\n                news: [...state],\n                loading:false\n               \n            }\n        case Types.DELETE_NEWS:       \n            index = findIndex(state.news,action.payload);\n            state.news.splice(index,1);\n            return {\n                ...state,\n                news:[...state.news]\n            }\n        case Types.CRAWLER:\n            return [...state]\n        case Types.HOME:\n            return {\n                ...state,\n                news: action.news\n            }\n        case Types.SLICE:\n            return{\n                ...state,\n                slice: action.slice\n            }\n        default:\n            return state;\n\n    }\n\n};\nexport default news;"]},"metadata":{},"sourceType":"module"}