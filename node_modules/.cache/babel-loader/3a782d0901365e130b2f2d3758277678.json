{"ast":null,"code":"import _regeneratorRuntime from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\n{\n  /* luu data tu sever ve stogre*/\n}\nexport var actFetchCategory = function actFetchCategory(currentPage, size) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var _ref2, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return API.get(\"/category/getall/?page=\".concat(currentPage, \"&size=\").concat(size));\n\n              case 3:\n                _ref2 = _context.sent;\n                data = _ref2.data;\n                dispatch({\n                  type: Types.FETCH_CATEGORY,\n                  payload: data.content\n                });\n                _context.next = 10;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n{\n  /* xoa data tren sever sau do tren stogre*/\n}\nexport var deleteCategoryStore = function deleteCategoryStore(id) {\n  return {\n    type: Types.DELETE_CATEGORY,\n    id: id\n  };\n};\nexport var deleteCategoryRequest = function deleteCategoryRequest(id) {\n  return function (dispath) {\n    return API.delete(\"category/\".concat(id)).then(function (reps) {\n      dispath(deleteCategoryStore(id));\n    });\n  };\n};\nexport var addCategoryRequest = function addCategoryRequest(category) {\n  return function (dispath) {\n    return API.post('category', category).then(function (reps) {\n      console.log(reps);\n\n      if (reps.status === 201) {\n        alert('Them thanh cong');\n      } //console.log(user) \n\n    });\n  };\n};","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\actions\\categoryAction.js"],"names":["Types","API","actFetchCategory","currentPage","size","dispatch","get","data","type","FETCH_CATEGORY","payload","content","deleteCategoryStore","id","DELETE_CATEGORY","deleteCategoryRequest","dispath","delete","then","reps","addCategoryRequest","category","post","console","log","status","alert"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA;AAAC;AAAkC;AAEnC,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,WAAD,EAAcC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuB,iBAAMC,QAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAExBJ,GAAG,CAACK,GAAJ,kCAAkCH,WAAlC,mBAAsDC,IAAtD,EAFwB;;AAAA;AAAA;AAEvCG,gBAAAA,IAFuC,SAEvCA,IAFuC;AAG/CF,gBAAAA,QAAQ,CAAC;AAACG,kBAAAA,IAAI,EAACR,KAAK,CAACS,cAAZ;AAA2BC,kBAAAA,OAAO,EAACH,IAAI,CAACI;AAAxC,iBAAD,CAAR;AAH+C;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAUP;AAAC;AAA6C;AAE9C,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAAQ;AACvC,SAAO;AACHL,IAAAA,IAAI,EAAER,KAAK,CAACc,eADT;AAEHD,IAAAA,EAAE,EAAEA;AAFD,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,EAAD,EAAQ;AACzC,SAAO,UAACG,OAAD,EAAa;AAChB,WAAOf,GAAG,CAACgB,MAAJ,oBAAuBJ,EAAvB,GAA6BK,IAA7B,CAAkC,UAAAC,IAAI,EAAI;AAC7CH,MAAAA,OAAO,CAACJ,mBAAmB,CAACC,EAAD,CAApB,CAAP;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM;AAOP,OAAO,IAAMO,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAC5C,SAAO,UAACL,OAAD,EAAa;AAChB,WAAOf,GAAG,CAACqB,IAAJ,CAAS,UAAT,EAAqBD,QAArB,EAA+BH,IAA/B,CAAoC,UAAAC,IAAI,EAAI;AAC/CI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;;AACA,UAAIA,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACrBC,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACH,OAJ8C,CAK/C;;AACH,KANM,CAAP;AAOH,GARD;AASH,CAVM","sourcesContent":["\nimport * as Types from '../Config/managerConstant';\nimport API from '../utils/api';\n{/* luu data tu sever ve stogre*/ }\n\nexport const actFetchCategory = (currentPage, size) => async dispatch => {\n    try {\n        const { data } = await API.get(`/category/getall/?page=${currentPage}&size=${size}`)\n        dispatch({type:Types.FETCH_CATEGORY,payload:data.content})\n    } catch (err) {\n\n    }\n\n\n}\n{/* xoa data tren sever sau do tren stogre*/ }\n\nexport const deleteCategoryStore = (id) => {\n    return {\n        type: Types.DELETE_CATEGORY,\n        id: id\n    }\n}\nexport const deleteCategoryRequest = (id) => {\n    return (dispath) => {\n        return API.delete(`category/${id}`).then(reps => {\n            dispath(deleteCategoryStore(id))\n        });\n    };\n}\nexport const addCategoryRequest = (category) => {\n    return (dispath) => {\n        return API.post('category', category).then(reps => {\n            console.log(reps);\n            if (reps.status === 201) {\n                alert('Them thanh cong');\n            }\n            //console.log(user) \n        });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}