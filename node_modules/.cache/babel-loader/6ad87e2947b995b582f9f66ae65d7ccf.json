{"ast":null,"code":"import _toConsumableArray from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as types from '../Config/managerConstant';\n\nvar findIndex = function findIndex(category, id) {\n  var result = -1;\n  category.forEach(function (category, index) {\n    if (category.categoryId === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nvar initalState = {\n  category: [],\n  totalPages: 1\n};\n\nvar category = function category() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initalState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var index = -1;\n  var id = action.id;\n  console.log(\"cate----\", action);\n\n  switch (action.type) {\n    case types.FETCH_CATEGORY:\n      return _objectSpread({}, state, {\n        category: action.content,\n        totalPages: action.totalPages\n      });\n\n    case types.ADD_CATEGORY:\n      return _objectSpread({}, state, {\n        category: [action.payload].concat(_toConsumableArray(state.category))\n      });\n\n    case types.UPDATE_CATEGORY:\n      index = findIndex(state.category, action.payload.id);\n      state.category[index] = action.cates;\n      return _objectSpread({}, state, {\n        category: _toConsumableArray(state.category)\n      });\n\n    case types.DELETE_CATEGORY:\n      index = findIndex(state.category, id);\n      state.category.splice(index, 1);\n      return _objectSpread({}, state, {\n        category: _toConsumableArray(state.category)\n      });\n\n    case types.FIND_CATEGORY_BYSOURCEID:\n      return _objectSpread({}, state, {\n        category: _toConsumableArray(action.categories)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default category;","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\reducers\\categoryReducer.js"],"names":["types","findIndex","category","id","result","forEach","index","categoryId","initalState","totalPages","state","action","console","log","type","FETCH_CATEGORY","content","ADD_CATEGORY","payload","UPDATE_CATEGORY","cates","DELETE_CATEGORY","splice","FIND_CATEGORY_BYSOURCEID","categories"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,CAACC,QAAD,EAAWC,EAAX,EAAkB;AAC9B,MAAIC,MAAM,GAAG,CAAC,CAAd;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAiB,UAACH,QAAD,EAAWI,KAAX,EAAqB;AAElC,QAAIJ,QAAQ,CAACK,UAAT,KAAwBJ,EAA5B,EAAgC;AAC5BC,MAAAA,MAAM,GAAGE,KAAT;AACH;AACJ,GALD;AAMA,SAAOF,MAAP;AACH,CATD;;AAWA,IAAII,WAAW,GAAG;AACdN,EAAAA,QAAQ,EAAC,EADK;AAEdO,EAAAA,UAAU,EAAC;AAFG,CAAlB;;AAKA,IAAMP,QAAQ,GAAG,SAAXA,QAAW,GAAiC;AAAA,MAAhCQ,KAAgC,uEAAxBF,WAAwB;AAAA,MAAXG,MAAW;AAC9C,MAAIL,KAAK,GAAC,CAAC,CAAX;AAD8C,MAExCH,EAFwC,GAEpCQ,MAFoC,CAExCR,EAFwC;AAG9CS,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBF,MAAvB;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKd,KAAK,CAACe,cAAX;AACG,+BACOL,KADP;AAEIR,QAAAA,QAAQ,EAAES,MAAM,CAACK,OAFrB;AAGIP,QAAAA,UAAU,EAAEE,MAAM,CAACF;AAHvB;;AAKH,SAAKT,KAAK,CAACiB,YAAX;AACG,+BACOP,KADP;AAEIR,QAAAA,QAAQ,GAAGS,MAAM,CAACO,OAAV,4BAAqBR,KAAK,CAACR,QAA3B;AAFZ;;AAIH,SAAKF,KAAK,CAACmB,eAAX;AACAb,MAAAA,KAAK,GAACL,SAAS,CAACS,KAAK,CAACR,QAAP,EAAgBS,MAAM,CAACO,OAAP,CAAef,EAA/B,CAAf;AACAO,MAAAA,KAAK,CAACR,QAAN,CAAeI,KAAf,IAAsBK,MAAM,CAACS,KAA7B;AACG,+BACOV,KADP;AAEIR,QAAAA,QAAQ,qBAAKQ,KAAK,CAACR,QAAX;AAFZ;;AAIH,SAAKF,KAAK,CAACqB,eAAX;AACIf,MAAAA,KAAK,GAAEL,SAAS,CAACS,KAAK,CAACR,QAAP,EAAgBC,EAAhB,CAAhB;AACAO,MAAAA,KAAK,CAACR,QAAN,CAAeoB,MAAf,CAAsBhB,KAAtB,EAA6B,CAA7B;AACA,+BACOI,KADP;AAEIR,QAAAA,QAAQ,qBAAKQ,KAAK,CAACR,QAAX;AAFZ;;AAIJ,SAAKF,KAAK,CAACuB,wBAAX;AACI,+BACOb,KADP;AAEIR,QAAAA,QAAQ,qBAAKS,MAAM,CAACa,UAAZ;AAFZ;;AAMJ;AACI,aAAOd,KAAP;AAlCR;AAsCH,CA1CD;;AA2CA,eAAeR,QAAf","sourcesContent":["import * as types from '../Config/managerConstant';\n\nvar findIndex = (category, id) => {\n    var result = -1;\n    category.forEach((category, index) => {\n\n        if (category.categoryId === id) {\n            result = index;\n        }\n    });\n    return result\n}\n\nvar initalState = {\n    category:[],\n    totalPages:1\n};\n\nconst category = (state = initalState, action) => {\n    var index=-1;\n    const{id}=action\n    console.log(\"cate----\",action)\n    switch (action.type) {\n        case types.FETCH_CATEGORY:\n           return{\n               ...state,\n               category: action.content,\n               totalPages: action.totalPages\n           }\n        case types.ADD_CATEGORY:\n           return{\n               ...state,\n               category: [action.payload,...state.category]\n           }\n        case types.UPDATE_CATEGORY:\n        index=findIndex(state.category,action.payload.id)\n        state.category[index]=action.cates\n           return{\n               ...state,\n               category:[...state.category]\n           }\n        case types.DELETE_CATEGORY:\n            index= findIndex(state.category,id)\n            state.category.splice(index, 1);\n            return {\n                ...state,\n                category:[...state.category]\n            }\n        case types.FIND_CATEGORY_BYSOURCEID:\n            return{\n                ...state,\n                category:[...action.categories]\n            }\n        \n\n        default:\n            return state;\n\n    }\n\n};\nexport default category;"]},"metadata":{},"sourceType":"module"}