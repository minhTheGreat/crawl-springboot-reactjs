{"ast":null,"code":"import _classCallCheck from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\NoteJS\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\NoteJS\\\\final\\\\src\\\\views\\\\elements\\\\DropzoneImg.js\";\nimport React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport request from 'superagent';\nvar CLOUDINARY_UPLOAD_PRESET = 'mockfinal19';\nvar CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/dv7rbbhuf/upload';\n\nvar DropzoneImg =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropzoneImg, _Component);\n\n  function DropzoneImg(props) {\n    var _this;\n\n    _classCallCheck(this, DropzoneImg);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DropzoneImg).call(this, props));\n\n    _this.handleImageUpload = function (file) {\n      var upload = request.post(CLOUDINARY_UPLOAD_URL).field('upload_preset', CLOUDINARY_UPLOAD_PRESET).field('file', file).on('progress', function (e, data) {\n        var progress = Math.round(data.loaded * 100.0 / data.total + '%');\n\n        _this.setState({\n          progress: progress\n        });\n\n        console.log(progress);\n      });\n      upload.end(function (err, response) {\n        if (err) {\n          console.error(err);\n        }\n\n        if (response.body.secure_url !== '') {\n          _this.setState({\n            uploadedFileCloudinaryUrl: response.body.secure_url\n          });\n\n          _this.props.onHandleAvatar(response.body.secure_url);\n        }\n      });\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      uploadedFileCloudinaryUrl: '',\n      progress: 0\n    };\n    return _this;\n  }\n\n  _createClass(DropzoneImg, [{\n    key: \"onImageDrop\",\n    value: function onImageDrop(files) {\n      this.setState({\n        uploadedFile: files[0]\n      });\n      this.handleImageUpload(files[0]);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"FileUpload\",\n        style: {\n          height: '4em',\n          background: '#ccc',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        multiple: false,\n        accept: \"image/*\",\n        onDrop: this.onImageDrop.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \" K\\xE9o \\u1EA3nh ho\\u1EB7c click \\u0111\\u1EC3 ch\\u1ECDn \\u1EA3nh \"));\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.state.uploadedFileCloudinaryUrl === '' ? null : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.uploadedFile.name), React.createElement(\"img\", {\n        src: this.state.uploadedFileCloudinaryUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DropzoneImg;\n}(Component);\n\nexport { DropzoneImg as default };","map":{"version":3,"sources":["F:\\NoteJS\\final\\src\\views\\elements\\DropzoneImg.js"],"names":["React","Component","Dropzone","request","CLOUDINARY_UPLOAD_PRESET","CLOUDINARY_UPLOAD_URL","DropzoneImg","props","handleImageUpload","file","upload","post","field","on","e","data","progress","Math","round","loaded","total","setState","console","log","end","err","response","error","body","secure_url","uploadedFileCloudinaryUrl","onHandleAvatar","state","files","uploadedFile","height","background","textAlign","onImageDrop","bind","getRootProps","getInputProps","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,wBAAwB,GAAG,aAAjC;AACA,IAAMC,qBAAqB,GAAG,kDAA9B;;IAGqBC,W;;;;;AACjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UAgBnBC,iBAhBmB,GAgBD,UAACC,IAAD,EAAS;AAEvB,UAAIC,MAAM,GAAGP,OAAO,CAACQ,IAAR,CAAaN,qBAAb,EACRO,KADQ,CACF,eADE,EACeR,wBADf,EAERQ,KAFQ,CAEF,MAFE,EAEKH,IAFL,EAEWI,EAFX,CAEc,UAFd,EAGL,UAACC,CAAD,EAAGC,IAAH,EAAW;AACN,YAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAaH,IAAI,CAACI,MAAL,GAAc,KAAf,GAAwBJ,IAAI,CAACK,KAA9B,GAAuC,GAAlD,CAAjB;;AACD,cAAKC,QAAL,CAAc;AAACL,UAAAA,QAAQ,EAARA;AAAD,SAAd;;AACFM,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD,OAPI,CAAb;AAWAN,MAAAA,MAAM,CAACc,GAAP,CAAW,UAACC,GAAD,EAAKC,QAAL,EAAgB;AACvB,YAAGD,GAAH,EAAO;AACHH,UAAAA,OAAO,CAACK,KAAR,CAAcF,GAAd;AACH;;AACD,YAAGC,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,EAAhC,EAAmC;AAC/B,gBAAKR,QAAL,CAAc;AACVS,YAAAA,yBAAyB,EAAEJ,QAAQ,CAACE,IAAT,CAAcC;AAD/B,WAAd;;AAGA,gBAAKtB,KAAL,CAAWwB,cAAX,CAA0BL,QAAQ,CAACE,IAAT,CAAcC,UAAxC;AAEH;AACJ,OAXD;AAYAP,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKS,KAAjB;AAEH,KA3CkB;;AAGf,UAAKA,KAAL,GAAa;AACTF,MAAAA,yBAAyB,EAAE,EADlB;AAETd,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAHe;AAOlB;;;;gCAEWiB,K,EAAO;AACf,WAAKZ,QAAL,CAAc;AACVa,QAAAA,YAAY,EAAED,KAAK,CAAC,CAAD;AADT,OAAd;AAGA,WAAKzB,iBAAL,CAAuByB,KAAK,CAAC,CAAD,CAA5B;AAEH;;;6BA6BQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAAEE,UAAAA,MAAM,EAAC,KAAT;AACnCC,UAAAA,UAAU,EAAE,MADuB;AACfC,UAAAA,SAAS,EAAC;AADK,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA,oBAAC,QAAD;AACI,QAAA,QAAQ,EAAE,KADd;AAEI,QAAA,MAAM,EAAC,SAFX;AAGI,QAAA,MAAM,EAAE,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,gBAAqC;AAAA,YAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,YAApBC,aAAoB,QAApBA,aAAoB;AAClC,eACI,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAEI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,EAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAJR,CADJ;AASH,OAdL,CAHA,CADJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKT,KAAL,CAAWF,yBAAX,KAAuC,EAAvC,GAA4C,IAA5C,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKE,KAAL,CAAWE,YAAX,CAAwBQ,IAA5B,CADJ,EAEI;AAAK,QAAA,GAAG,EAAE,KAAKV,KAAL,CAAWF,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFR,CAtBJ,CADJ;AAsCH;;;;EArFoC7B,S;;SAApBK,W","sourcesContent":["import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport request from 'superagent';\r\n\r\nconst CLOUDINARY_UPLOAD_PRESET = 'mockfinal19'\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/dv7rbbhuf/upload'\r\n\r\n\r\nexport default class DropzoneImg extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            uploadedFileCloudinaryUrl: '',\r\n            progress:0\r\n        };\r\n    }\r\n\r\n    onImageDrop(files) {\r\n        this.setState({\r\n            uploadedFile: files[0]\r\n        })\r\n        this.handleImageUpload(files[0])\r\n        \r\n    }\r\n    handleImageUpload=(file)=> {\r\n       \r\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\r\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n            .field('file',file).on('progress',\r\n                (e,data) =>{\r\n                     const progress = Math.round(((data.loaded * 100.0) / data.total) + '%')\r\n                    this.setState({progress})\r\n                  console.log(progress)\r\n                }\r\n            \r\n            );\r\n            \r\n        upload.end((err,response)=>{\r\n            if(err){\r\n                console.error(err);\r\n            }\r\n            if(response.body.secure_url !== ''){\r\n                this.setState({\r\n                    uploadedFileCloudinaryUrl: response.body.secure_url\r\n                })\r\n                this.props.onHandleAvatar(response.body.secure_url)\r\n                \r\n            }\r\n        })\r\n        console.log(this.state)\r\n\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"FileUpload\" style={{ height:'4em',\r\n                background: '#ccc', textAlign:'center'\r\n                }}>\r\n                <Dropzone \r\n                    multiple={false}\r\n                    accept=\"image/*\"\r\n                    onDrop={this.onImageDrop.bind(this)}>\r\n                    {({ getRootProps, getInputProps }) => {\r\n                        return (\r\n                            <div {...getRootProps()} >\r\n\r\n                                <input {...getInputProps()} />\r\n                                {\r\n                                    <p > Kéo ảnh hoặc click để chọn ảnh </p>\r\n                                }\r\n                            </div>\r\n                        )\r\n                    }}\r\n\r\n                </Dropzone>\r\n                </div>\r\n                <div>\r\n                    {this.state.uploadedFileCloudinaryUrl==='' ? null :\r\n                        <div>\r\n                            <p>{this.state.uploadedFile.name}</p>\r\n                            <img src={this.state.uploadedFileCloudinaryUrl}/>\r\n                          \r\n                            \r\n                        </div>\r\n                       \r\n\r\n                    }\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}